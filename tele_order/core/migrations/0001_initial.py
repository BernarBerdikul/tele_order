# Generated by Django 3.2.5 on 2021-07-23 20:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tele_order.mixins.resized_field
import tele_order.utils.image_utils
import tele_order.utils.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_create', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Время создания')),
                ('date_update', models.DateTimeField(auto_now=True, null=True, verbose_name='Время последнего изменения')),
                ('username', models.CharField(max_length=128, unique=True, verbose_name='Логин пользователя')),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='Пароль')),
                ('first_name', models.CharField(max_length=128, verbose_name='Логин пользователя')),
                ('last_name', models.CharField(max_length=128, verbose_name='Логин пользователя')),
                ('telegram_chat_id', models.CharField(db_index=True, max_length=10, unique=True, verbose_name='ID пользователя в Телеграм')),
                ('language_code', models.CharField(default='ru', max_length=2, verbose_name='Язык')),
                ('role', models.CharField(choices=[('USER', 'Менеджер'), ('MANAGER', 'Менеджер'), ('SUPER_ADMIN', 'Супер админ')], default='USER', max_length=30, verbose_name='Роль пользователя')),
                ('is_active', models.BooleanField(default=True, verbose_name='Пользователь активен')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Время создания')),
                ('date_update', models.DateTimeField(auto_now=True, null=True, verbose_name='Время последнего изменения')),
                ('title', models.CharField(max_length=64, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Описание')),
                ('enable', models.BooleanField(default=False, verbose_name='Активен')),
                ('image', models.ImageField(blank=True, null=True, upload_to=tele_order.utils.image_utils.promotion_image, validators=[tele_order.utils.validators.validate_image], verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Реклама',
                'verbose_name_plural': 'Реклама',
                'db_table': 'promotion',
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Время создания')),
                ('date_update', models.DateTimeField(auto_now=True, null=True, verbose_name='Время последнего изменения')),
                ('tag', models.SlugField(blank=True, max_length=30, null=True, verbose_name='Тэг ресторана')),
                ('title', models.CharField(blank=True, max_length=64, null=True, verbose_name='Название ресторана')),
                ('description', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Описание ресторана')),
                ('enable', models.BooleanField(default=True, verbose_name='Активен')),
                ('qr_code', tele_order.mixins.resized_field.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=90, size=[400, 400], upload_to=tele_order.utils.image_utils.qr_codes_path, validators=[tele_order.utils.validators.validate_image], verbose_name='QR код')),
                ('manager', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ресторан',
                'verbose_name_plural': 'Рестораны',
                'db_table': 'restaurant',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Время создания')),
                ('date_update', models.DateTimeField(auto_now=True, null=True, verbose_name='Время последнего изменения')),
                ('order_number', models.PositiveIntegerField(verbose_name='Статус заказа')),
                ('order_accepted', models.BooleanField(default=False, verbose_name='Завершен')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.restaurant', verbose_name='Ресторан')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'db_table': 'order',
            },
        ),
    ]
